#include <stdlib.h>
#include "GameUtil.h"
#include "Invulnerability.h"
#include "BoundingShape.h"
#include "Spaceship.h"
#include "Asteroids.h"

Invulnerability::Invulnerability(void) : GameObject("Invulnerability")
{
    mAngle = rand() % 360;
    mPosition.x = rand() / 2;
    mPosition.y = rand() / 2;
    mPosition.z = 0.0;
}

Invulnerability::~Invulnerability(void)
{
}

bool Invulnerability::CollisionTest(std::shared_ptr<GameObject> o)
{
    if (o->GetType() != GameObjectType("Spaceship")) return false;
    if (!mBoundingShape || !o->GetBoundingShape()) return false;
    return mBoundingShape->CollisionTest(o->GetBoundingShape());
}


void Invulnerability::OnCollision(const GameObjectList& objects)
{
    mWorld->FlagForRemoval(GetThisPtr());

    for (auto obj : objects)
    {
        if (obj->GetType() == GameObjectType("Spaceship"))
        {
            auto ship = dynamic_pointer_cast<Spaceship>(obj);
            if (ship)
            {
                ship->SetInvulnerable(true);
            }
        }
    }
}
